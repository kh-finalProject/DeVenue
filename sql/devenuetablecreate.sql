DROP TABLE MEMBER;

CREATE TABLE MEMBER (
	MEM_ID	NUMBER		NOT NULL,
	USER_TYPE	VARCHAR2(10)		NOT NULL,
	MEM_TYPE	VARCHAR2(10)		NOT NULL,
	MEM_EMAIL	VARCHAR2(100)		NULL,
	MEM_NICK	VARCHAR2(100)		NULL,
	MEM_NAME	VARCHAR2(4000)		NULL,
	MEM_PWD	VARCHAR2(100)		NULL,
	ADDRESS1	VARCHAR2(4000)		NULL,
	ADDRESS2	VARCHAR2(4000)		NULL,
	ADDRESS3	VARCHAR2(4000)		NULL,
	PHONE	NUMBER		NULL,
	CELLPHONE	NUMBER		NULL,
	FAX_NO	NUMBER		NULL,
	TAX_EMAIL	VARCHAR2(4000)		NULL,
	DEC_COUNT	NUMBER		NULL,
	MEM_ACTION	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	IS_ADVERTISE	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	MEM_CREATE_DATE	DATE	DEFAULT SYSDATE	NULL,
	MEM_MODIFY_DATE	DATE	DEFAULT SYSDATE	NULL,
	MEM_STATUS	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	MEM_TYPE_NAME	VARCHAR2(100)		NULL
);

COMMENT ON COLUMN MEMBER.MEM_ID IS '회원 기본키';

COMMENT ON COLUMN MEMBER.USER_TYPE IS '사용자 분류';

COMMENT ON COLUMN MEMBER.MEM_TYPE IS '회원 형태';

COMMENT ON COLUMN MEMBER.MEM_EMAIL IS '사용자 이메일';

COMMENT ON COLUMN MEMBER.MEM_NICK IS '사용자 닉네임';

COMMENT ON COLUMN MEMBER.MEM_NAME IS '사용자 이름';

COMMENT ON COLUMN MEMBER.MEM_PWD IS '사용자 비밀번호';

COMMENT ON COLUMN MEMBER.ADDRESS1 IS '사용자 우편번호';

COMMENT ON COLUMN MEMBER.ADDRESS2 IS '사용자 주소';

COMMENT ON COLUMN MEMBER.ADDRESS3 IS '사용자 상세주소';

COMMENT ON COLUMN MEMBER.PHONE IS '사용자 전화번호';

COMMENT ON COLUMN MEMBER.CELLPHONE IS '사용자 핸드폰번호';

COMMENT ON COLUMN MEMBER.FAX_NO IS '사용자 팩스번호';

COMMENT ON COLUMN MEMBER.TAX_EMAIL IS '세금관리용 이메일';

COMMENT ON COLUMN MEMBER.DEC_COUNT IS '신고당한 횟수';

COMMENT ON COLUMN MEMBER.MEM_ACTION IS '사용자 활동여부';

COMMENT ON COLUMN MEMBER.IS_ADVERTISE IS '마케팅메시지 수신 여부';

COMMENT ON COLUMN MEMBER.MEM_CREATE_DATE IS '가입일';

COMMENT ON COLUMN MEMBER.MEM_MODIFY_DATE IS '수정일';

COMMENT ON COLUMN MEMBER.MEM_STATUS IS '사용자 탈퇴상태';

COMMENT ON COLUMN MEMBER.MEM_TYPE_NAME IS '회원 소속명';

DROP TABLE USERTYPE;

CREATE TABLE USERTYPE (
	UT_CODE	VARCHAR2(10)		NOT NULL,
	UT_NAME	VARCHAR(100)		NULL
);

COMMENT ON COLUMN USERTYPE.UT_CODE IS '사용자타입코드,UT1~4';

COMMENT ON COLUMN USERTYPE.UT_NAME IS '사용자종류이름(주관리자, 관리자, 클라이언트, 파트너스))';

DROP TABLE MEMTYPE;

CREATE TABLE MEMTYPE (
	MEM_TYPE_CODE	VARCHAR2(10)		NOT NULL,
	MEM_TYPE_KIND	VARCHAR2(15)		NOT NULL
);

COMMENT ON COLUMN MEMTYPE.MEM_TYPE_CODE IS 'MT1~6';

COMMENT ON COLUMN MEMTYPE.MEM_TYPE_KIND IS '개인,법인, 팀, 개인사업자, 법인사업자, 기업';

DROP TABLE IDENTIFY;

CREATE TABLE IDENTIFY (
	IDE_ID	NUMBER		NOT NULL,
	IDE_NAME	VARCHAR2(100)		NULL,
	IDE_ADDRESS	VARCHAR2(4000)		NULL,
	IDE_ORIGINFILE	VARCHAR2(4000)		NULL,
	IDE_RENAMEFILE	VARCHAR2(4000)		NULL,
	IDE_STATUS	VARCHAR2(100)	DEFAULT 'BEFORE'	NULL
);

COMMENT ON COLUMN IDENTIFY.IDE_ID IS '회원의 기본키를 기본키로';

COMMENT ON COLUMN IDENTIFY.IDE_NAME IS '신원 인증자 이름';

COMMENT ON COLUMN IDENTIFY.IDE_ADDRESS IS '신원 인증자 주소';

COMMENT ON COLUMN IDENTIFY.IDE_ORIGINFILE IS '신원인증 서류 원본파일명';

COMMENT ON COLUMN IDENTIFY.IDE_RENAMEFILE IS '신원인증 서류 리네임파일명';

COMMENT ON COLUMN IDENTIFY.IDE_STATUS IS '인증 전, 심사 중, 심사완료(재등록/인증완료), CHECK제약조건(BEFORE, ING, COMPLETE, RE)';

DROP TABLE PROFILE;

CREATE TABLE PROFILE (
	PRO_ID	NUMBER		NOT NULL,
	MEM_ID	NUMBER		NOT NULL,
	PI_ID	NUMBER		NOT NULL,
	C_ID	NUMBER		NOT NULL,
	SC_ID	NUMBER		NOT NULL,
	INTRODUCTION	VARCHAR2(4000)		NOT NULL,
	URL	VARCHAR2(1000)		NULL,
	PRO_IMG	VARCHAR2(3000)		NULL
);

COMMENT ON COLUMN PROFILE.PRO_ID IS '프로필 기본키';

COMMENT ON COLUMN PROFILE.MEM_ID IS '회원정보 외래키';

COMMENT ON COLUMN PROFILE.PI_ID IS '파트너스 정보 외래키';

COMMENT ON COLUMN PROFILE.C_ID IS '경력 외래키';

COMMENT ON COLUMN PROFILE.SC_ID IS '학력 외래키';

DROP TABLE PROJECT;

CREATE TABLE PROJECT (
	PRO_ID	NUMBER		NOT NULL,
	MEM_ID	NUMBER		NOT NULL,
	PRO_NAME	VARCHAR2(100)		NOT NULL,
	PRO_MAINTAIN	VARCHAR2(1)	DEFAULT 'N'	NOT NULL,
	PRO_STA_ID	VARCHAR2(10)		NOT NULL,
	PRO_RECRUIT	VARCHAR2(1)	DEFAULT 'Y'	NOT NULL,
	PRO_CREATE_DATE	DATE	DEFAULT SYSDATE	NOT NULL,
	PRO_PLAN	NUMBER		NOT NULL,
	PRO_PLANDETAIL	NUMBER		NULL,
	PRO_SUMMARY	VARCHAR2(1000)		NULL,
	PRO_NEEDS	VARCHAR2(1000)		NULL,
	PRO_NEEDSDETAIL	VARCHAR2(1000)		NULL,
	PRO_RESOURCE	VARCHAR2(1000)		NULL,
	PRO_PAYMENT	NUMBER		NOT NULL,
	PRO_START_DATE	DATE		NOT NULL,
	PRO_DURATION	NUMBER		NOT NULL,
	PRO_R_END_DATE	DATE		NOT NULL,
	PRO_END_DATE	DATE		NOT NULL,
	MC_ID	VARCHAR2(10)		NOT NULL,
	DC_ID	VARCHAR2(10)		NOT NULL,
	WT_ID	VARCHAR2(10)		NOT NULL,
	PRO_RECRUIT_NUM	NUMBER		NOT NULL,
	PRO_PLAN_PAPER	VARCHAR2(100)		NULL,
	PRO_PLAN_REPAPER	VARCHAR2(100)		NULL,
	PRO_LOCATION	VARCHAR2(20)		NOT NULL,
	PRO_HELP	NUMBER		NULL,
	PRO_MANAGE	NUMBER		NULL,
	PRO_FUTUREPLAN	NUMBER		NULL,
	PRO_PRIORTY	NUMBER		NULL,
	PRO_CONTRACT	VARCHAR2(100)		NULL,
	MEM_TYPE_CODE	VARCHAR2(10)		NOT NULL,
	PRO_WORKPLACE	VARCHAR2(100)		NULL,
	SIG_ID	NUMBER		NOT NULL,
	PRO_PAY_STATUS	VARCHAR2(1)		NOT NULL,
	PRO_PARENT_ID	NUMBER		NOT NULL
);

COMMENT ON COLUMN PROJECT.PRO_ID IS '100~';

COMMENT ON COLUMN PROJECT.MEM_ID IS '시퀀스 100~';

COMMENT ON COLUMN PROJECT.PRO_MAINTAIN IS 'N / Y(신규/유지보수)';

COMMENT ON COLUMN PROJECT.PRO_STA_ID IS 'PS100~';

COMMENT ON COLUMN PROJECT.PRO_RECRUIT IS 'Y / N(모집중, 모집마감)';

COMMENT ON COLUMN PROJECT.PRO_PLAN IS '(1,2 ,3)아이디어만 있음, 필요한 내용 정리, 상세한 기획문서';

COMMENT ON COLUMN PROJECT.PRO_PLANDETAIL IS '체크박스(5개)->숫자';

COMMENT ON COLUMN PROJECT.PRO_SUMMARY IS '프로젝트 소개(100자 이내 요약)';

COMMENT ON COLUMN PROJECT.PRO_NEEDS IS '기능요약';

COMMENT ON COLUMN PROJECT.PRO_NEEDSDETAIL IS '구현하기 원하는 기능의 상세';

COMMENT ON COLUMN PROJECT.PRO_PAYMENT IS '예상금액->실제금액';

COMMENT ON COLUMN PROJECT.PRO_R_END_DATE IS '파트너스 모집마감일';

COMMENT ON COLUMN PROJECT.PRO_END_DATE IS '7일후 정산 기능 위해 필요';

COMMENT ON COLUMN PROJECT.MC_ID IS 'MC1~3';

COMMENT ON COLUMN PROJECT.DC_ID IS 'DC1~4';

COMMENT ON COLUMN PROJECT.WT_ID IS 'WT1~3';

COMMENT ON COLUMN PROJECT.PRO_HELP IS '1,2(인력있음, 인력없음)IT프로젝트경험있는인력유무';

COMMENT ON COLUMN PROJECT.PRO_MANAGE IS '1,2(경험있음, 경험없음)';

COMMENT ON COLUMN PROJECT.PRO_FUTUREPLAN IS '1, 2(계획있음, 계획없음)';

COMMENT ON COLUMN PROJECT.PRO_PRIORTY IS '1~4(빠름/완성도/금액/기간준수)';

COMMENT ON COLUMN PROJECT.PRO_CONTRACT IS '검수 끝나고 파트너 매칭후에 업데이트';

COMMENT ON COLUMN PROJECT.MEM_TYPE_CODE IS 'MT1~6';

COMMENT ON COLUMN PROJECT.PRO_WORKPLACE IS '근무지역인지 확인해야됨(민환)';

COMMENT ON COLUMN PROJECT.PRO_PAY_STATUS IS 'Y/N,Default:N';

COMMENT ON COLUMN PROJECT.PRO_PARENT_ID IS '연장신청 승인>>새프로젝트 생성 하므로 이전 프로젝트 ID';

DROP TABLE CHAT;

CREATE TABLE CHAT (
	CHAT_ID	NUMBER		NOT NULL,
	FROM_ID	NUMBER		NOT NULL,
	TO_ID	NUMBER		NOT NULL,
	MESSAGE_ID	NUMBER		NOT NULL,
	ROOM_ID	NUMBER		NOT NULL,
	CHAT_STATUS	VARCHAR2(3)	DEFAULT 'Y'	NULL
);

COMMENT ON COLUMN CHAT.CHAT_ID IS '채팅 기본키';

COMMENT ON COLUMN CHAT.FROM_ID IS '발신자, 회원테이블의 기본키';

COMMENT ON COLUMN CHAT.TO_ID IS '수신자, 회원테이블의 기본키';

COMMENT ON COLUMN CHAT.MESSAGE_ID IS '채팅 세부 내용인 MESSAGE 테이블의 기본키를 외래키로';

COMMENT ON COLUMN CHAT.ROOM_ID IS '채팅방 테이블 기본키';

COMMENT ON COLUMN CHAT.CHAT_STATUS IS '대화상대가 없어지거나 채팅방이 존재하지 않으면 N';

DROP TABLE MESSAGE;

CREATE TABLE MESSAGE (
	MESSAGE_ID	NUMBER		NOT NULL,
	CHAT_CONTENT	VARCHAR2(4000)		NULL,
	CHAT_FILE	VARCHAR2(4000)		NULL,
	READ	VARCHAR2(3)	DEFAULT 'N'	NULL,
	MSG_CREAET_DATE	DATE	DEFAULT SYSDATE	NULL
);

COMMENT ON COLUMN MESSAGE.MESSAGE_ID IS '메시지 기본키';

COMMENT ON COLUMN MESSAGE.CHAT_CONTENT IS '채팅 내용';

COMMENT ON COLUMN MESSAGE.CHAT_FILE IS '채팅에서 보낸 파일의 경로';

COMMENT ON COLUMN MESSAGE.READ IS '읽은 메시지인지 여부 CHECK제약조건 Y/N';

COMMENT ON COLUMN MESSAGE.MSG_CREAET_DATE IS '보낸 시간';

DROP TABLE P_PROCESS;

CREATE TABLE P_PROCESS (
	PRO_PID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL
);

COMMENT ON COLUMN P_PROCESS.PRO_ID IS '시퀀스P1';

DROP TABLE P_APPLY;

CREATE TABLE P_APPLY (
	PRO_AID	NUMBER		NOT NULL,
	MEM_PID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	PRO_APAYMENT	NUMBER		NULL,
	PRO_ADURATION	NUMBER		NULL,
	PRO_ACONTENT	VARCHAR2(4000)		NOT NULL,
	PRO_ARESUME	VARCHAR2(100)		NULL,
	PRO_REARESUME	VARCHAR2(100)		NULL,
	PRO_APPLY_DATE	DATE	DEFAULT SYSDATE	NOT NULL,
	PRO_ASAVE_STATUS	VARCHAR2(1)		NULL,
	PRO_ASTATUS	VARCHAR2(1)		NULL
);

COMMENT ON COLUMN P_APPLY.PRO_AID IS '100~';

COMMENT ON COLUMN P_APPLY.PRO_APAYMENT IS '파트너스가 내고하는 금액';

COMMENT ON COLUMN P_APPLY.PRO_ADURATION IS '파트너스가 내고하는 기간';

COMMENT ON COLUMN P_APPLY.PRO_ASAVE_STATUS IS 'Y/N';

COMMENT ON COLUMN P_APPLY.PRO_ASTATUS IS 'Y/N';

DROP TABLE P_LIKE;

CREATE TABLE P_LIKE (
	PRO_LID	NUMBER		NOT NULL,
	MEM_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	PRO_LCREATE_DATE	DATE		NULL
);

DROP TABLE CHATROOM;

CREATE TABLE CHATROOM (
	ROOM_ID	NUMBER		NOT NULL,
	ROOM_NAME	VARCHAR2(4000)		NULL,
	ROOM_STATUS	VARCHAR2(3)	DEFAULT 'Y'	NULL
);

COMMENT ON COLUMN CHATROOM.ROOM_ID IS '채팅방 기본키';

COMMENT ON COLUMN CHATROOM.ROOM_NAME IS '채팅방 이름';

COMMENT ON COLUMN CHATROOM.ROOM_STATUS IS '채팅방 나가기 여부';

DROP TABLE P_SUGGEST;

CREATE TABLE P_SUGGEST (
	PS_ID	NUMBER		NOT NULL,
	MEM_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	PS_CREATE_DATE	DATE		NULL
);

COMMENT ON COLUMN P_SUGGEST.PS_ID IS '파트너스에게 오는 제안 기본키';

COMMENT ON COLUMN P_SUGGEST.MEM_ID IS '제안받은 파트너스의 아이디';

COMMENT ON COLUMN P_SUGGEST.PRO_ID IS '프로젝트 기본키를 외래키로';

COMMENT ON COLUMN P_SUGGEST.PS_CREATE_DATE IS '제안받은 날짜';

DROP TABLE P_REPLY;

CREATE TABLE P_REPLY (
	PRO_RID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	MEM_ID	NUMBER		NOT NULL,
	PRO_RCONTENT	VARCHAR2(1000)		NOT NULL,
	PRO_RCREATE_DATE	DATE	DEFAULT SYSDATE	NOT NULL,
	PRO_RMODIFY_DATE	DATE	DEFAULT SYSDATE	NULL,
	PRO_RANSWER	VARCHAR2(1)		NULL,
	PRO_RSTATUS	VARCHAR2(1)	DEFAULT 'N'	NULL,
	PRO_PARENT_RID	NUMBER		NOT NULL
);

COMMENT ON COLUMN P_REPLY.PRO_RID IS '100~';

COMMENT ON COLUMN P_REPLY.MEM_ID IS '회원 기본키';

COMMENT ON COLUMN P_REPLY.PRO_RANSWER IS 'Y/N';

COMMENT ON COLUMN P_REPLY.PRO_RSTATUS IS 'Y /N';

DROP TABLE CALCULATE;

CREATE TABLE CALCULATE (
	CAL_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	CAL_EXPECT_PAY	NUMBER		NULL,
	CAL_REAL_PAY	NUMBER		NULL,
	CAL_DEPOSIT	NUMBER		NULL,
	CAL_INCENTIVE	NUMBER		NULL,
	CAL_TAX	NUMBER		NULL,
	CAL_STATUS	VARCHAR2(1)	DEFAULT 'N'	NULL,
	CAL_CDATE	DATE		NULL
);

COMMENT ON COLUMN CALCULATE.CAL_ID IS '100';

COMMENT ON COLUMN CALCULATE.CAL_REAL_PAY IS '예상+추가금액';

COMMENT ON COLUMN CALCULATE.CAL_STATUS IS 'Y / N';

DROP TABLE P_ANSWER;

CREATE TABLE P_ANSWER (
	PRO_AA_ID	NUMBER		NOT NULL,
	PRO_AQ_ID	NUMBER		NOT NULL,
	PRO_AA_CONTENT	VARCHAR2(4000)		NOT NULL,
	PRO_AAC_DATE	DATE	DEFAULT SYSDATE	NOT NULL
);

COMMENT ON COLUMN P_ANSWER.PRO_AA_ID IS '100';

DROP TABLE CHAT_SET;

CREATE TABLE CHAT_SET (
	CS_ID	NUMBER		NOT NULL,
	INTRO_CONTENT	VARCHAR2(4000)		NULL,
	OUTTIME_CONTENT	VARCHAR2(4000)		NULL,
	POSSIBLE_TIME_START	VARCHAR2(4000)		NULL,
	POSSIBLE_TIME_END	VARCHAR2(4000)		NULL,
	MONDAY	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	TUESDAY	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	WEDNESDAY	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	THURSDAY	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	FRIDAY	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	SATURDAY	VARCHAR2(3)	DEFAULT 'Y'	NULL,
	SUNDAY	VARCHAR2(3)	DEFAULT 'Y'	NULL
);

COMMENT ON COLUMN CHAT_SET.CS_ID IS '채팅 설정 기본키';

COMMENT ON COLUMN CHAT_SET.INTRO_CONTENT IS '채팅 가능시간인 경우 기본 안내 텍스트';

COMMENT ON COLUMN CHAT_SET.OUTTIME_CONTENT IS '채팅 불가 시간인 경우 기본 안내 텍스트';

COMMENT ON COLUMN CHAT_SET.POSSIBLE_TIME_START IS '채팅 가능 시간(시작)';

COMMENT ON COLUMN CHAT_SET.POSSIBLE_TIME_END IS '채팅 가능 시간(종료)';

COMMENT ON COLUMN CHAT_SET.MONDAY IS '채팅가능요일, CHECK제약조건 Y/N)';

COMMENT ON COLUMN CHAT_SET.TUESDAY IS '채팅가능요일, CHECK제약조건 Y/N)';

COMMENT ON COLUMN CHAT_SET.WEDNESDAY IS '채팅가능요일, CHECK제약조건 Y/N)';

COMMENT ON COLUMN CHAT_SET.THURSDAY IS '채팅가능요일, CHECK제약조건 Y/N)';

COMMENT ON COLUMN CHAT_SET.FRIDAY IS '채팅가능요일, CHECK제약조건 Y/N)';

COMMENT ON COLUMN CHAT_SET.SATURDAY IS '채팅가능요일, CHECK제약조건 Y/N)';

COMMENT ON COLUMN CHAT_SET.SUNDAY IS '채팅가능요일, CHECK제약조건 Y/N)';

DROP TABLE ASK;

CREATE TABLE ASK (
	ASK_ID	NUMBER		NOT NULL,
	ASK_TITLE	VARCHAR2(4000)		NULL,
	ASK_CONTENT	VARCHAR2(4000)		NULL,
	ASK_KEYWORD	VARCHAR2(4000)		NULL,
	ASK_CREATE_DATE	DATE	DEFAULT SYSDATE	NULL,
	ASK_MODIFY_DATE	DATE	DEFAULT SYSDATE	NULL
);

COMMENT ON COLUMN ASK.ASK_ID IS '챗봇데이터 기본키';

COMMENT ON COLUMN ASK.ASK_TITLE IS '게시판용 타이틀(질문)';

COMMENT ON COLUMN ASK.ASK_CONTENT IS '답변내용';

COMMENT ON COLUMN ASK.ASK_KEYWORD IS '챗봇 태그가 될 단어';

COMMENT ON COLUMN ASK.ASK_CREATE_DATE IS '생성일';

COMMENT ON COLUMN ASK.ASK_MODIFY_DATE IS '수정일';

DROP TABLE EVAL;

CREATE TABLE EVAL (
	E_ID	NUMBER		NOT NULL,
	E_WRITER	NUMBER		NOT NULL,
	E_TARGET	NUMBER		NOT NULL,
	EP_ID	NUMBER		NOT NULL,
	E_AGV	NUMBER		NULL,
	E_CONTENT	VARCHAR2(4000)		NULL,
	E_STAR1	NUMBER		NULL,
	E_STAR2	NUMBER		NULL,
	E_STAR3	NUMBER		NULL,
	E_STAR4	NUMBER		NULL,
	E_STAR5	NUMBER		NULL,
	E_CREATE_DATE	DATE	DEFAULT SYSDATE	NULL,
	E_STATUS	VARCHAR2(10)	DEFAULT 'N'	NULL
);

COMMENT ON COLUMN EVAL.E_ID IS '평가 기본키';

COMMENT ON COLUMN EVAL.E_WRITER IS '작성자, 회원정보 테이블 기본키';

COMMENT ON COLUMN EVAL.E_TARGET IS '평가대상, 회원정보 테이블 기본키';

COMMENT ON COLUMN EVAL.EP_ID IS '종료된 프로젝트 테이블';

COMMENT ON COLUMN EVAL.E_AGV IS '평가점수(정수)';

COMMENT ON COLUMN EVAL.E_STAR1 IS '전문성(정수)';

COMMENT ON COLUMN EVAL.E_STAR2 IS '적극성(정수)';

COMMENT ON COLUMN EVAL.E_STAR3 IS '의사소통(정수)';

COMMENT ON COLUMN EVAL.E_STAR4 IS '일정준수(정수)';

COMMENT ON COLUMN EVAL.E_STAR5 IS '만족도(정수)';

COMMENT ON COLUMN EVAL.E_STATUS IS '평가 여부';

DROP TABLE PRO_EVAL;

CREATE TABLE PRO_EVAL (
	PE_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	E_ID	NUMBER		NOT NULL
);

COMMENT ON COLUMN PRO_EVAL.PE_ID IS '프로필 평가 기본키';

COMMENT ON COLUMN PRO_EVAL.PRO_ID IS '프로필 테이블 외래키';

COMMENT ON COLUMN PRO_EVAL.E_ID IS '평가 테이블 외래키';

DROP TABLE PORTFOLIO;

CREATE TABLE PORTFOLIO (
	PORT_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	MC_ID	VARCHAR2(10)		NOT NULL,
	DC_ID	VARCHAR2(10)		NOT NULL,
	PROT_NAME	VARCHAR2(100)		NOT NULL,
	PORT_JOIN	NUMBER		NOT NULL,
	PORT_CONTENT	VARCHAR2(4000)		NOT NULL,
	PORT_START_DATE	DATE		NOT NULL,
	PORT_END_DATE	DATE		NOT NULL
);

COMMENT ON COLUMN PORTFOLIO.PORT_ID IS '포트폴리오 기본키';

COMMENT ON COLUMN PORTFOLIO.PRO_ID IS '프로필테이블 외래키';

COMMENT ON COLUMN PORTFOLIO.MC_ID IS '대표카테고리 테이블 외래키';

COMMENT ON COLUMN PORTFOLIO.DC_ID IS '세부카테고리 테이블 외래키';

DROP TABLE MCATE;

CREATE TABLE MCATE (
	MC_ID	VARCHAR2(10)		NOT NULL,
	MC_TYPE	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN MCATE.MC_ID IS '카테고리 기본키(MC1)';

COMMENT ON COLUMN MCATE.MC_TYPE IS '개발, 디자인, 개발+디자인';

DROP TABLE DCATE;

CREATE TABLE DCATE (
	DC_ID	VARCHAR2(10)		NOT NULL,
	DC_TYPE	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN DCATE.DC_ID IS '세부카테고리 기본키(DC1)';

COMMENT ON COLUMN DCATE.DC_TYPE IS '웹, 어플리케이션, 퍼블리싱, 기타';

DROP TABLE TECH;

CREATE TABLE TECH (
	T_ID	VARCHAR2(10)		NOT NULL,
	T_NAME	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN TECH.T_ID IS '기술 기본키 T1~T7';

COMMENT ON COLUMN TECH.T_NAME IS 'java, oracle, html5, css, javascript, jquery, etc';

DROP TABLE PORT_TEC;

CREATE TABLE PORT_TEC (
	PORT_ID	NUMBER		NOT NULL,
	T_ID	VARCHAR2(10)		NOT NULL
);

COMMENT ON COLUMN PORT_TEC.PORT_ID IS '포트폴리오 테이블 외래키 식별';

COMMENT ON COLUMN PORT_TEC.T_ID IS '기술 테이블 외래키 식별';

DROP TABLE P_TEC;

CREATE TABLE P_TEC (
	PT_ID	NUMBER		NOT NULL,
	T_ID	VARCHAR2(10)		NOT NULL,
	PRO_ID	NUMBER		NOT NULL
);

DROP TABLE PARTINFO;

CREATE TABLE PARTINFO (
	PI_ID	NUMBER		NOT NULL,
	WT_ID	VARCHAR2(10)		NOT NULL,
	MC_ID	VARCHAR2(10)		NOT NULL,
	PI_TYPE	NUMBER		NOT NULL
);

COMMENT ON COLUMN PARTINFO.PI_ID IS '파트너스 정보 기본키';

COMMENT ON COLUMN PARTINFO.WT_ID IS '근무형태 테이블 외래키';

COMMENT ON COLUMN PARTINFO.MC_ID IS '대표카테고리 테이블 외래키';

COMMENT ON COLUMN PARTINFO.PI_TYPE IS '1~3(활동가능 / 협의필요 / 활동불가능)';

DROP TABLE WORKTYPE;

CREATE TABLE WORKTYPE (
	WT_ID	VARCHAR2(10)		NOT NULL,
	WT_TYPE	VARCHAR2(20)		NULL
);

COMMENT ON COLUMN WORKTYPE.WT_ID IS '근무형태 기본키(WT1)';

COMMENT ON COLUMN WORKTYPE.WT_TYPE IS '외주, 상주, 상관없음(외주+상주)';

DROP TABLE CAREER;

CREATE TABLE CAREER (
	C_ID	NUMBER		NOT NULL,
	C_NAME	VARCHAR2(30)		NOT NULL,
	C_DEPT	VARCHAR2(30)		NOT NULL,
	C_POSITION	VARCHAR2(30)		NOT NULL,
	C_START_DATE	DATE		NOT NULL,
	C_END_DATE	DATE		NULL,
	C_CONTENT	VARCHAR2(4000)		NULL
);

COMMENT ON COLUMN CAREER.C_ID IS '경력 기본키';

DROP TABLE SKILL;

CREATE TABLE SKILL (
	SKILL_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	SKILL_KIND	VARCHAR2(100)		NOT NULL,
	SKILL_LEVEL	NUMBER		NOT NULL,
	SKILL_YEAR	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN SKILL.SKILL_ID IS '보유기술 기본키';

COMMENT ON COLUMN SKILL.PRO_ID IS '프로필테이블 외래키';

COMMENT ON COLUMN SKILL.SKILL_KIND IS '기술명';

COMMENT ON COLUMN SKILL.SKILL_LEVEL IS '1~5(등급)';

COMMENT ON COLUMN SKILL.SKILL_YEAR IS '몇년이상인지';

DROP TABLE SC_CAREER;

CREATE TABLE SC_CAREER (
	SC_ID	NUMBER		NOT NULL,
	SG_ID	VARCHAR2(10)		NOT NULL,
	SS_ID	VARCHAR2(10)		NOT NULL,
	SC_NAME	VARCHAR2(30)		NOT NULL,
	SC_MAJOR	VARCHAR2(30)		NOT NULL,
	SC_START_DATE	DATE		NOT NULL,
	SC_END_DATE	DATE		NULL
);

COMMENT ON COLUMN SC_CAREER.SC_ID IS '학력 기본키';

COMMENT ON COLUMN SC_CAREER.SG_ID IS '학력분류 테이블 외래키';

COMMENT ON COLUMN SC_CAREER.SS_ID IS '학력상태 테이블 외래키';

DROP TABLE CERTIFICATE;

CREATE TABLE CERTIFICATE (
	CC_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	CC_NAME	VARCHAR2(30)		NOT NULL,
	CC_PLACE	VARCHAR2(30)		NOT NULL,
	CC_CREATE_DATE	DATE		NOT NULL,
	CC_NUMBER	VARCHAR2(30)		NULL
);

COMMENT ON COLUMN CERTIFICATE.CC_ID IS '자격증 기본키';

COMMENT ON COLUMN CERTIFICATE.PRO_ID IS '프로필테이블 외래키';

DROP TABLE SC_GROUP;

CREATE TABLE SC_GROUP (
	SG_ID	VARCHAR2(10)		NOT NULL,
	SC_KIND	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN SC_GROUP.SG_ID IS '학력분류 기본키 SG1~SG6';

COMMENT ON COLUMN SC_GROUP.SC_KIND IS '중학교/고등학교/전문제/대학교/대학원/박사과정';

DROP TABLE SC_STATUS;

CREATE TABLE SC_STATUS (
	SS_ID	VARCHAR2(10)		NOT NULL,
	SS_KIND	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN SC_STATUS.SS_ID IS '학력상태 기본키SS1~SS4';

COMMENT ON COLUMN SC_STATUS.SS_KIND IS '재학/휴학/졸업/자퇴';

DROP TABLE DECLARE;

CREATE TABLE DECLARE (
	DEC_ID	NUMBER		NOT NULL,
	FROM_ID	NUMBER		NOT NULL,
	TO_ID	NUMBER		NOT NULL,
	DEC_CONTENT	VARCHAR2(4000)		NULL
);

COMMENT ON COLUMN DECLARE.DEC_ID IS '신고 기본키';

COMMENT ON COLUMN DECLARE.FROM_ID IS '신고자 회원번호';

COMMENT ON COLUMN DECLARE.TO_ID IS '피신고자 회원번호';

COMMENT ON COLUMN DECLARE.DEC_CONTENT IS '신고 내용';

DROP TABLE PORT_APPLY;

CREATE TABLE PORT_APPLY (
	AP_ID	NUMBER		NOT NULL,
	PRO_AID	NUMBER		NOT NULL,
	PORT_ID	NUMBER		NOT NULL,
	AP_CONTENT	VARCHAR2(4000)		NULL
);

DROP TABLE SIGNATURE;

CREATE TABLE SIGNATURE (
	SIG_ID	NUMBER		NOT NULL,
	MEM_ID	NUMBER		NOT NULL,
	SIG_ORIGIN_FILENAME	VARCHAR2(4000)		NULL,
	SIG_RENAME_FILENAME	VARCHAR2(4000)		NULL
);

COMMENT ON COLUMN SIGNATURE.SIG_ID IS '날인 기본키';

COMMENT ON COLUMN SIGNATURE.MEM_ID IS '회원 기본키를 외래키로';

COMMENT ON COLUMN SIGNATURE.SIG_ORIGIN_FILENAME IS '원본파일명';

COMMENT ON COLUMN SIGNATURE.SIG_RENAME_FILENAME IS '리네임파일명';

DROP TABLE PORT_IMG;

CREATE TABLE PORT_IMG (
	PORT_IMG_ID	NUMBER		NOT NULL,
	PORT_ID	NUMBER		NOT NULL,
	PORT_IMG_CONTENT	VARCHAR2(4000)		NULL,
	PORT_IMG_PATH	VARCHAR2(100)		NULL
);

COMMENT ON COLUMN PORT_IMG.PORT_IMG_ID IS '포트폴리오이미지 기본키';

COMMENT ON COLUMN PORT_IMG.PORT_ID IS '포트폴리오 테이블 외래키';

DROP TABLE P_EXTEND;

CREATE TABLE P_EXTEND (
	PRO_EID	NUMBER		NOT NULL,
	PRO_PID	NUMBER		NOT NULL,
	EXT_REASON	VARCHAR2(1000)		NULL,
	EXT_START_DATE	DATE		NULL
);

DROP TABLE P_MATCH;

CREATE TABLE P_MATCH (
	PRO_PM_ID	NUMBER		NOT NULL,
	PRO_PID	NUMBER		NOT NULL,
	MEM_ID	NUMBER		NOT NULL,
	SIG_ID	NUMBER		NOT NULL
);

DROP TABLE P_SUSPEND;

CREATE TABLE P_SUSPEND (
	PRO_SID	NUMBER		NOT NULL,
	PRO_PID	NUMBER		NOT NULL,
	SUS_REASON	VARCHAR2(1000)		NULL,
	SUS_START_DATE	DATE		NULL
);

DROP TABLE P_CENSOR;

CREATE TABLE P_CENSOR (
	PRO_CID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	PRO_CSTART_DATE	DATE		NULL,
	PRO_CEND_DATE	DATE		NULL,
	PRO_CSTATUS	VARCHAR2(1)	DEFAULT 'N'	NULL
);

COMMENT ON COLUMN P_CENSOR.PRO_CID IS '100';

COMMENT ON COLUMN P_CENSOR.PRO_CSTATUS IS 'Y/N';

DROP TABLE P_STATUS;

CREATE TABLE P_STATUS (
	PRO_STA_ID	VARCHAR2(10)		NOT NULL,
	PRO_STA_NAME	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN P_STATUS.PRO_STA_ID IS 'PST1~8';

COMMENT ON COLUMN P_STATUS.PRO_STA_NAME IS '검수전,검수중,결제전(계약완료),진행중,완료,중단,임시저장,등록실패';

DROP TABLE ACCOUNT;

CREATE TABLE ACCOUNT (
	ACC_ID	NUMBER		NOT NULL,
	BANK_ID	VARCHAR2(10)		NOT NULL,
	MASTER	VARCHAR2(4000)		NULL,
	ACC_NO	NUMBER		NULL,
	MEM_ID	NUMBER		NOT NULL
);

COMMENT ON COLUMN ACCOUNT.ACC_ID IS '계좌 기본키';

COMMENT ON COLUMN ACCOUNT.BANK_ID IS '은행명 기본키를 외래키로';

COMMENT ON COLUMN ACCOUNT.MASTER IS '예금주 이름';

COMMENT ON COLUMN ACCOUNT.ACC_NO IS '계좌번호(특수기호 제외)';

COMMENT ON COLUMN ACCOUNT.MEM_ID IS '회원 기본키';

DROP TABLE DECLINE;

CREATE TABLE DECLINE (
	PRO_DID	VARCHAR2(10)		NOT NULL,
	PRO_DNAME	NUMBER		NOT NULL
);

COMMENT ON COLUMN DECLINE.PRO_DID IS 'D1~4';

COMMENT ON COLUMN DECLINE.PRO_DNAME IS '1 : 노동, 2 : 재무, 3: 기술,4 : 기타';

DROP TABLE BANK;

CREATE TABLE BANK (
	BANK_ID	VARCHAR2(10)		NOT NULL,
	BANK_NAME	VARCHAR2(4000)		NULL
);

COMMENT ON COLUMN BANK.BANK_ID IS '은행 기본키 B1~';

COMMENT ON COLUMN BANK.BANK_NAME IS '은행 이름';

DROP TABLE P_END;

CREATE TABLE P_END (
	EP_ID	NUMBER		NOT NULL,
	PRO_ID	NUMBER		NOT NULL,
	PRO_PM_ID	NUMBER		NOT NULL
);

DROP TABLE P_QUESTION;

CREATE TABLE P_QUESTION (
	PRO_AQ_ID	NUMBER		NOT NULL,
	PRO_AID	NUMBER		NOT NULL,
	PRO_AQ_CONTENT	VARCHAR2(4000)		NOT NULL,
	PRO_AQC_DATE	DATE	DEFAULT SYSDATE	NOT NULL
);

COMMENT ON COLUMN P_QUESTION.PRO_AQ_ID IS '100';

DROP TABLE E_DECLINE;

CREATE TABLE E_DECLINE (
	PRO_ED_ID	NUMBER		NOT NULL,
	PRO_EID	NUMBER		NOT NULL,
	PRO_DID	VARCHAR2(10)		NOT NULL
);

COMMENT ON COLUMN E_DECLINE.PRO_DID IS 'D1~4';

DROP TABLE E_AGREE;

CREATE TABLE E_AGREE (
	PRO_EA_ID	NUMBER		NOT NULL,
	PRO_EID	NUMBER		NOT NULL,
	PRO_PM_ID	NUMBER		NOT NULL,
	PRO_EA_STATUS	VARCHAR2(1)		NULL
);

COMMENT ON COLUMN E_AGREE.PRO_EA_STATUS IS 'Y/N';

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	MEM_ID
);

ALTER TABLE USERTYPE ADD CONSTRAINT PK_USERTYPE PRIMARY KEY (
	UT_CODE
);

ALTER TABLE MEMTYPE ADD CONSTRAINT PK_MEMTYPE PRIMARY KEY (
	MEM_TYPE_CODE
);

ALTER TABLE IDENTIFY ADD CONSTRAINT PK_IDENTIFY PRIMARY KEY (
	IDE_ID
);

ALTER TABLE PROFILE ADD CONSTRAINT PK_PROFILE PRIMARY KEY (
	PRO_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT PK_PROJECT PRIMARY KEY (
	PRO_ID
);

ALTER TABLE CHAT ADD CONSTRAINT PK_CHAT PRIMARY KEY (
	CHAT_ID
);

ALTER TABLE MESSAGE ADD CONSTRAINT PK_MESSAGE PRIMARY KEY (
	MESSAGE_ID
);

ALTER TABLE P_PROCESS ADD CONSTRAINT PK_P_PROCESS PRIMARY KEY (
	PRO_PID
);

ALTER TABLE P_APPLY ADD CONSTRAINT PK_P_APPLY PRIMARY KEY (
	PRO_AID
);

ALTER TABLE P_LIKE ADD CONSTRAINT PK_P_LIKE PRIMARY KEY (
	PRO_LID
);

ALTER TABLE CHATROOM ADD CONSTRAINT PK_CHATROOM PRIMARY KEY (
	ROOM_ID
);

ALTER TABLE P_SUGGEST ADD CONSTRAINT PK_P_SUGGEST PRIMARY KEY (
	PS_ID
);

ALTER TABLE P_REPLY ADD CONSTRAINT PK_P_REPLY PRIMARY KEY (
	PRO_RID
);

ALTER TABLE CALCULATE ADD CONSTRAINT PK_CALCULATE PRIMARY KEY (
	CAL_ID
);

ALTER TABLE P_ANSWER ADD CONSTRAINT PK_P_ANSWER PRIMARY KEY (
	PRO_AA_ID
);

ALTER TABLE CHAT_SET ADD CONSTRAINT PK_CHAT_SET PRIMARY KEY (
	CS_ID
);

ALTER TABLE ASK ADD CONSTRAINT PK_ASK PRIMARY KEY (
	ASK_ID
);

ALTER TABLE EVAL ADD CONSTRAINT PK_EVAL PRIMARY KEY (
	E_ID
);

ALTER TABLE PRO_EVAL ADD CONSTRAINT PK_PRO_EVAL PRIMARY KEY (
	PE_ID,
	PRO_ID,
	E_ID
);

ALTER TABLE PORTFOLIO ADD CONSTRAINT PK_PORTFOLIO PRIMARY KEY (
	PORT_ID
);

ALTER TABLE MCATE ADD CONSTRAINT PK_MCATE PRIMARY KEY (
	MC_ID
);

ALTER TABLE DCATE ADD CONSTRAINT PK_DCATE PRIMARY KEY (
	DC_ID
);

ALTER TABLE TECH ADD CONSTRAINT PK_TECH PRIMARY KEY (
	T_ID
);

ALTER TABLE PORT_TEC ADD CONSTRAINT PK_PORT_TEC PRIMARY KEY (
	PORT_ID,
	T_ID
);

ALTER TABLE P_TEC ADD CONSTRAINT PK_P_TEC PRIMARY KEY (
	PT_ID,
	T_ID,
	PRO_ID
);

ALTER TABLE PARTINFO ADD CONSTRAINT PK_PARTINFO PRIMARY KEY (
	PI_ID
);

ALTER TABLE WORKTYPE ADD CONSTRAINT PK_WORKTYPE PRIMARY KEY (
	WT_ID
);

ALTER TABLE CAREER ADD CONSTRAINT PK_CAREER PRIMARY KEY (
	C_ID
);

ALTER TABLE SKILL ADD CONSTRAINT PK_SKILL PRIMARY KEY (
	SKILL_ID
);

ALTER TABLE SC_CAREER ADD CONSTRAINT PK_SC_CAREER PRIMARY KEY (
	SC_ID
);

ALTER TABLE CERTIFICATE ADD CONSTRAINT PK_CERTIFICATE PRIMARY KEY (
	CC_ID
);

ALTER TABLE SC_GROUP ADD CONSTRAINT PK_SC_GROUP PRIMARY KEY (
	SG_ID
);

ALTER TABLE SC_STATUS ADD CONSTRAINT PK_SC_STATUS PRIMARY KEY (
	SS_ID
);

ALTER TABLE DECLARE ADD CONSTRAINT PK_DECLARE PRIMARY KEY (
	DEC_ID
);

ALTER TABLE PORT_APPLY ADD CONSTRAINT PK_PORT_APPLY PRIMARY KEY (
	AP_ID
);

ALTER TABLE SIGNATURE ADD CONSTRAINT PK_SIGNATURE PRIMARY KEY (
	SIG_ID
);

ALTER TABLE PORT_IMG ADD CONSTRAINT PK_PORT_IMG PRIMARY KEY (
	PORT_IMG_ID
);

ALTER TABLE P_EXTEND ADD CONSTRAINT PK_P_EXTEND PRIMARY KEY (
	PRO_EID
);

ALTER TABLE P_MATCH ADD CONSTRAINT PK_P_MATCH PRIMARY KEY (
	PRO_PM_ID
);

ALTER TABLE P_SUSPEND ADD CONSTRAINT PK_P_SUSPEND PRIMARY KEY (
	PRO_SID
);

ALTER TABLE P_CENSOR ADD CONSTRAINT PK_P_CENSOR PRIMARY KEY (
	PRO_CID
);

ALTER TABLE P_STATUS ADD CONSTRAINT PK_P_STATUS PRIMARY KEY (
	PRO_STA_ID
);

ALTER TABLE ACCOUNT ADD CONSTRAINT PK_ACCOUNT PRIMARY KEY (
	ACC_ID
);

ALTER TABLE DECLINE ADD CONSTRAINT PK_DECLINE PRIMARY KEY (
	PRO_DID
);

ALTER TABLE BANK ADD CONSTRAINT PK_BANK PRIMARY KEY (
	BANK_ID
);

ALTER TABLE P_END ADD CONSTRAINT PK_P_END PRIMARY KEY (
	EP_ID
);

ALTER TABLE P_QUESTION ADD CONSTRAINT PK_P_QUESTION PRIMARY KEY (
	PRO_AQ_ID
);

ALTER TABLE E_DECLINE ADD CONSTRAINT PK_E_DECLINE PRIMARY KEY (
	PRO_ED_ID
);

ALTER TABLE E_AGREE ADD CONSTRAINT PK_E_AGREE PRIMARY KEY (
	PRO_EA_ID
);

ALTER TABLE MEMBER ADD CONSTRAINT FK_USERTYPE_TO_MEMBER_1 FOREIGN KEY (
	USER_TYPE
)
REFERENCES USERTYPE (
	UT_CODE
);

ALTER TABLE MEMBER ADD CONSTRAINT FK_MEMTYPE_TO_MEMBER_1 FOREIGN KEY (
	MEM_TYPE
)
REFERENCES MEMTYPE (
	MEM_TYPE_CODE
);

ALTER TABLE IDENTIFY ADD CONSTRAINT FK_MEMBER_TO_IDENTIFY_1 FOREIGN KEY (
	IDE_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE PROFILE ADD CONSTRAINT FK_MEMBER_TO_PROFILE_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE PROFILE ADD CONSTRAINT FK_PARTINFO_TO_PROFILE_1 FOREIGN KEY (
	PI_ID
)
REFERENCES PARTINFO (
	PI_ID
);

ALTER TABLE PROFILE ADD CONSTRAINT FK_CAREER_TO_PROFILE_1 FOREIGN KEY (
	C_ID
)
REFERENCES CAREER (
	C_ID
);

ALTER TABLE PROFILE ADD CONSTRAINT FK_SC_CAREER_TO_PROFILE_1 FOREIGN KEY (
	SC_ID
)
REFERENCES SC_CAREER (
	SC_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_MEMBER_TO_PROJECT_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_P_STATUS_TO_PROJECT_1 FOREIGN KEY (
	PRO_STA_ID
)
REFERENCES P_STATUS (
	PRO_STA_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_MCATE_TO_PROJECT_1 FOREIGN KEY (
	MC_ID
)
REFERENCES MCATE (
	MC_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_DCATE_TO_PROJECT_1 FOREIGN KEY (
	DC_ID
)
REFERENCES DCATE (
	DC_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_WORKTYPE_TO_PROJECT_1 FOREIGN KEY (
	WT_ID
)
REFERENCES WORKTYPE (
	WT_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_MEMTYPE_TO_PROJECT_1 FOREIGN KEY (
	MEM_TYPE_CODE
)
REFERENCES MEMTYPE (
	MEM_TYPE_CODE
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_SIGNATURE_TO_PROJECT_1 FOREIGN KEY (
	SIG_ID
)
REFERENCES SIGNATURE (
	SIG_ID
);

ALTER TABLE PROJECT ADD CONSTRAINT FK_PROJECT_TO_PROJECT_1 FOREIGN KEY (
	PRO_PARENT_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE CHAT ADD CONSTRAINT FK_MEMBER_TO_CHAT_1 FOREIGN KEY (
	FROM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE CHAT ADD CONSTRAINT FK_MEMBER_TO_CHAT_2 FOREIGN KEY (
	TO_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE CHAT ADD CONSTRAINT FK_MESSAGE_TO_CHAT_1 FOREIGN KEY (
	MESSAGE_ID
)
REFERENCES MESSAGE (
	MESSAGE_ID
);

ALTER TABLE CHAT ADD CONSTRAINT FK_CHATROOM_TO_CHAT_1 FOREIGN KEY (
	ROOM_ID
)
REFERENCES CHATROOM (
	ROOM_ID
);

ALTER TABLE P_PROCESS ADD CONSTRAINT FK_PROJECT_TO_P_PROCESS_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE P_APPLY ADD CONSTRAINT FK_MEMBER_TO_P_APPLY_1 FOREIGN KEY (
	MEM_PID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE P_APPLY ADD CONSTRAINT FK_PROJECT_TO_P_APPLY_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE P_LIKE ADD CONSTRAINT FK_MEMBER_TO_P_LIKE_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE P_LIKE ADD CONSTRAINT FK_PROJECT_TO_P_LIKE_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE P_SUGGEST ADD CONSTRAINT FK_MEMBER_TO_P_SUGGEST_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE P_SUGGEST ADD CONSTRAINT FK_PROJECT_TO_P_SUGGEST_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE P_REPLY ADD CONSTRAINT FK_PROJECT_TO_P_REPLY_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE P_REPLY ADD CONSTRAINT FK_MEMBER_TO_P_REPLY_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE P_REPLY ADD CONSTRAINT FK_P_REPLY_TO_P_REPLY_1 FOREIGN KEY (
	PRO_PARENT_RID
)
REFERENCES P_REPLY (
	PRO_RID
);

ALTER TABLE CALCULATE ADD CONSTRAINT FK_PROJECT_TO_CALCULATE_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE P_ANSWER ADD CONSTRAINT FK_P_QUESTION_TO_P_ANSWER_1 FOREIGN KEY (
	PRO_AQ_ID
)
REFERENCES P_QUESTION (
	PRO_AQ_ID
);

ALTER TABLE EVAL ADD CONSTRAINT FK_MEMBER_TO_EVAL_1 FOREIGN KEY (
	E_WRITER
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE EVAL ADD CONSTRAINT FK_MEMBER_TO_EVAL_2 FOREIGN KEY (
	E_TARGET
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE EVAL ADD CONSTRAINT FK_P_END_TO_EVAL_1 FOREIGN KEY (
	EP_ID
)
REFERENCES P_END (
	EP_ID
);

ALTER TABLE PRO_EVAL ADD CONSTRAINT FK_PROFILE_TO_PRO_EVAL_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROFILE (
	PRO_ID
);

ALTER TABLE PRO_EVAL ADD CONSTRAINT FK_EVAL_TO_PRO_EVAL_1 FOREIGN KEY (
	E_ID
)
REFERENCES EVAL (
	E_ID
);

ALTER TABLE PORTFOLIO ADD CONSTRAINT FK_PROFILE_TO_PORTFOLIO_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROFILE (
	PRO_ID
);

ALTER TABLE PORTFOLIO ADD CONSTRAINT FK_MCATE_TO_PORTFOLIO_1 FOREIGN KEY (
	MC_ID
)
REFERENCES MCATE (
	MC_ID
);

ALTER TABLE PORTFOLIO ADD CONSTRAINT FK_DCATE_TO_PORTFOLIO_1 FOREIGN KEY (
	DC_ID
)
REFERENCES DCATE (
	DC_ID
);

ALTER TABLE PORT_TEC ADD CONSTRAINT FK_PORTFOLIO_TO_PORT_TEC_1 FOREIGN KEY (
	PORT_ID
)
REFERENCES PORTFOLIO (
	PORT_ID
);

ALTER TABLE PORT_TEC ADD CONSTRAINT FK_TECH_TO_PORT_TEC_1 FOREIGN KEY (
	T_ID
)
REFERENCES TECH (
	T_ID
);

ALTER TABLE P_TEC ADD CONSTRAINT FK_TECH_TO_P_TEC_1 FOREIGN KEY (
	T_ID
)
REFERENCES TECH (
	T_ID
);

ALTER TABLE P_TEC ADD CONSTRAINT FK_PROJECT_TO_P_TEC_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE PARTINFO ADD CONSTRAINT FK_WORKTYPE_TO_PARTINFO_1 FOREIGN KEY (
	WT_ID
)
REFERENCES WORKTYPE (
	WT_ID
);

ALTER TABLE PARTINFO ADD CONSTRAINT FK_MCATE_TO_PARTINFO_1 FOREIGN KEY (
	MC_ID
)
REFERENCES MCATE (
	MC_ID
);

ALTER TABLE SKILL ADD CONSTRAINT FK_PROFILE_TO_SKILL_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROFILE (
	PRO_ID
);

ALTER TABLE SC_CAREER ADD CONSTRAINT FK_SC_GROUP_TO_SC_CAREER_1 FOREIGN KEY (
	SG_ID
)
REFERENCES SC_GROUP (
	SG_ID
);

ALTER TABLE SC_CAREER ADD CONSTRAINT FK_SC_STATUS_TO_SC_CAREER_1 FOREIGN KEY (
	SS_ID
)
REFERENCES SC_STATUS (
	SS_ID
);

ALTER TABLE CERTIFICATE ADD CONSTRAINT FK_PROFILE_TO_CERTIFICATE_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROFILE (
	PRO_ID
);

ALTER TABLE DECLARE ADD CONSTRAINT FK_MEMBER_TO_DECLARE_1 FOREIGN KEY (
	FROM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE DECLARE ADD CONSTRAINT FK_MEMBER_TO_DECLARE_2 FOREIGN KEY (
	TO_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE PORT_APPLY ADD CONSTRAINT FK_P_APPLY_TO_PORT_APPLY_1 FOREIGN KEY (
	PRO_AID
)
REFERENCES P_APPLY (
	PRO_AID
);

ALTER TABLE PORT_APPLY ADD CONSTRAINT FK_PORTFOLIO_TO_PORT_APPLY_1 FOREIGN KEY (
	PORT_ID
)
REFERENCES PORTFOLIO (
	PORT_ID
);

ALTER TABLE SIGNATURE ADD CONSTRAINT FK_MEMBER_TO_SIGNATURE_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE PORT_IMG ADD CONSTRAINT FK_PORTFOLIO_TO_PORT_IMG_1 FOREIGN KEY (
	PORT_ID
)
REFERENCES PORTFOLIO (
	PORT_ID
);

ALTER TABLE P_EXTEND ADD CONSTRAINT FK_P_PROCESS_TO_P_EXTEND_1 FOREIGN KEY (
	PRO_PID
)
REFERENCES P_PROCESS (
	PRO_PID
);

ALTER TABLE P_MATCH ADD CONSTRAINT FK_P_PROCESS_TO_P_MATCH_1 FOREIGN KEY (
	PRO_PID
)
REFERENCES P_PROCESS (
	PRO_PID
);

ALTER TABLE P_MATCH ADD CONSTRAINT FK_MEMBER_TO_P_MATCH_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE P_MATCH ADD CONSTRAINT FK_SIGNATURE_TO_P_MATCH_1 FOREIGN KEY (
	SIG_ID
)
REFERENCES SIGNATURE (
	SIG_ID
);

ALTER TABLE P_SUSPEND ADD CONSTRAINT FK_P_PROCESS_TO_P_SUSPEND_1 FOREIGN KEY (
	PRO_PID
)
REFERENCES P_PROCESS (
	PRO_PID
);

ALTER TABLE P_CENSOR ADD CONSTRAINT FK_PROJECT_TO_P_CENSOR_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE ACCOUNT ADD CONSTRAINT FK_BANK_TO_ACCOUNT_1 FOREIGN KEY (
	BANK_ID
)
REFERENCES BANK (
	BANK_ID
);

ALTER TABLE ACCOUNT ADD CONSTRAINT FK_MEMBER_TO_ACCOUNT_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE P_END ADD CONSTRAINT FK_PROJECT_TO_P_END_1 FOREIGN KEY (
	PRO_ID
)
REFERENCES PROJECT (
	PRO_ID
);

ALTER TABLE P_END ADD CONSTRAINT FK_P_MATCH_TO_P_END_1 FOREIGN KEY (
	PRO_PM_ID
)
REFERENCES P_MATCH (
	PRO_PM_ID
);

ALTER TABLE P_QUESTION ADD CONSTRAINT FK_P_APPLY_TO_P_QUESTION_1 FOREIGN KEY (
	PRO_AID
)
REFERENCES P_APPLY (
	PRO_AID
);

ALTER TABLE E_DECLINE ADD CONSTRAINT FK_P_EXTEND_TO_E_DECLINE_1 FOREIGN KEY (
	PRO_EID
)
REFERENCES P_EXTEND (
	PRO_EID
);

ALTER TABLE E_DECLINE ADD CONSTRAINT FK_DECLINE_TO_E_DECLINE_1 FOREIGN KEY (
	PRO_DID
)
REFERENCES DECLINE (
	PRO_DID
);

ALTER TABLE E_AGREE ADD CONSTRAINT FK_P_EXTEND_TO_E_AGREE_1 FOREIGN KEY (
	PRO_EID
)
REFERENCES P_EXTEND (
	PRO_EID
);

ALTER TABLE E_AGREE ADD CONSTRAINT FK_P_MATCH_TO_E_AGREE_1 FOREIGN KEY (
	PRO_PM_ID
)
REFERENCES P_MATCH (
	PRO_PM_ID
);

